<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ankers.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.ankers.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getStockInfoByTime" resultType="com.ankers.stock.pojo.domain.StockUpDownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price - sri.min_price) / sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            sri.cur_time as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price - sri.pre_close_price) as upDown,
            (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as increase,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where cur_time = #{curDate} order by upDown desc
    </select>
    <select id="getStockUpDownCount" resultType="map">
        select tmp.time, count(0) as count
        from (select (cur_price - pre_close_price) / pre_close_price as ud,
        date_format(cur_time, '%Y%m%d%H%i')             as time
        from stock_rt_info
        where cur_time between #{startDate} and #{endDate}
        HAVING ud
        <if test="flag==1">
            >= 0.1
        </if>
        <if test="flag==0">
            &lt;= -0.1
        </if>
        ) as tmp
        group by tmp.time;
    </select>

<!--    阅读体验很不好 -->
<!--    <select id="getIncreaseRangeByDate" resultType="java.util.Map">-->
<!--        select title, count(*) as count-->
<!--        from (select case-->
<!--        when temp.ud > 0.07 then ">7%"-->
<!--        when temp.ud > 0.05 and temp.ud &lt;= 0.07 then "5~7%"-->
<!--        when temp.ud > 0.03 and temp.ud &lt;= 0.05 then "3~5%"-->
<!--        when temp.ud > 0 and temp.ud &lt;= 0.03 then "0~3%"-->
<!--        when temp.ud > -0.03 and temp.ud &lt;= 0.05 then "-3~0%"-->
<!--        when temp.ud > -0.05 and temp.ud &lt;= 0.03 then "-5~3%"-->
<!--        when temp.ud > -0.07 and temp.ud &lt;= 0.05 then "-7~5%"-->
<!--        else '&lt;-7%'-->
<!--        end as title-->
<!--        from (select (cur_price - stock_rt_info.pre_close_price) / pre_close_price as ud-->
<!--        from stock_rt_info-->
<!--        where cur_time = #{curDate}) as temp) as temp2-->
<!--        group by temp2.title;-->
<!--    </select>-->

<!--    当 sql 存在大量转义字符时，建议使用 CDATA， 不会对他进行转义-->
    <select id="getIncreaseRangeByDate" resultType="java.util.Map">
<![CDATA[
        select title, count(*) as count
        from (select case
            when temp.ud > 0.07 then ">7%"
            when temp.ud > 0.05 and temp.ud <= 0.07 then "5~7%"
            when temp.ud > 0.03 and temp.ud <= 0.05 then "3~5%"
            when temp.ud > 0 and temp.ud <= 0.03 then "0~3%"
            when temp.ud > -0.03 and temp.ud <= 0.05 then "-3~0%"
            when temp.ud > -0.05 and temp.ud <= 0.03 then "-5~-3%"
            when temp.ud > -0.07 and temp.ud <= 0.05 then "-7~-5%"
            else '<-7%'
            end as title
            from (select (cur_price - stock_rt_info.pre_close_price) / pre_close_price as ud
            from stock_rt_info
            where cur_time = #{curDate}) as temp) as temp2
        group by temp2.title;
]]>
    </select>
    <select id="getStock4MinuteInfo" resultType="com.ankers.stock.pojo.domain.Stock4MinuteDomain">
        select
            sri.cur_time as date,
            sri.trade_amount as tradeAmt,
            sri.stock_code as code,
            sri.min_price as lowPrice,
            sri.pre_close_price as preClosePrice,
            sri.stock_name as name,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.stock_code = #{stockCode}
          and sri.cur_time between #{openDate} and #{endDate};
    </select>
    <select id="getStockScreenDKline" resultType="com.ankers.stock.pojo.domain.Stock4EvrDayDomain">
       select
            sri.cur_time as date,
            sri.trade_amount    as tradeAmt,
            sri.stock_code      as code,
            sri.min_price       as lowPrice,
            sri.stock_name      as name,
            sri.max_price       as highPrice,
            sri.open_price      as openPrice,
            sri.trade_volume    as tradeVol,
            sri.cur_price       as closePrice,
            sri.pre_close_price as preClosePrice
        from stock_rt_info as sri
        where sri.stock_code = #{stockCode}
          and sri.cur_time in (select max(cur_time) as max
            from stock_rt_info
            where stock_code = #{stockCode}
          and cur_time between #{openDate} and #{endDate}
            group by date_format(cur_time, "%Y%m%d")) order by date desc;
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ankers.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ankers.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ankers.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ankers.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
